/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sk.mathis.stuba.mobiledeviceservice;

import java.sql.Date;

import sk.mathis.stuba.device.DeviceModel;
import sk.mathis.stuba.equip.DataHelpers;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.criterion.Restrictions;
import sk.mathis.stuba.device.ComboBoxItem;
import static sk.mathis.stuba.equip.DataHelpers.conn;
import sk.mathis.stuba.hibernatemapper.MdsDevice;
import sk.mathis.stuba.hibernatemapper.MdsDeviceModel;
import sk.mathis.stuba.hibernatemapper.MdsDeviceVendor;
import sk.mathis.stuba.hibernatemapper.MdsServiceClaimant;
import sk.mathis.stuba.hibernatemapper.MdsServiceOrder;

/**
 *
 * @author Mathis
 */
public class Mds_registerDevicePanel extends javax.swing.JPanel {

    public ArrayList<String> order;
    private Map<Integer, DeviceModel> deviceModelMap;
    private Map<String, DeviceModel> deviceModelMapString;
    private Map<Integer, String> deviceVendorMap = new HashMap();
    private Integer claimantRegistered = 0;
    private MdsServiceClaimant newClaimant = null;
    private Mds_mainGui gui;
    private MdsServiceClaimant foundPerson = null;

    public Mds_registerDevicePanel(Mds_mainGui gui) throws SQLException {
        this.gui = gui;
        initComponents();

        jRegisterDeviceButton.setEnabled(false);
        jDeviceFault.setEnabled(false);
        jDeviceIMEI.setEnabled(false);
        jDeviceModelComboBox.setEnabled(false);
        jDeviceTypeComboBox.setEnabled(false);
        jDeviceVendorComboBox.setEnabled(false);
        setComboBoxes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jClaimantName = new javax.swing.JTextField();
        jClaimantEmail = new javax.swing.JTextField();
        jClaimantAdress = new javax.swing.JTextField();
        jClaimantCity = new javax.swing.JTextField();
        jClaimantCountry = new javax.swing.JTextField();
        jClaimantPhone = new javax.swing.JTextField();
        jClaimantLegalTypeComboBox = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jDeviceIMEI = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jDeviceTypeComboBox = new javax.swing.JComboBox();
        jDeviceFault = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        registerButton = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jRegisterDeviceButton = new javax.swing.JButton();
        jDeviceVendorComboBox = new javax.swing.JComboBox();
        jDeviceModelComboBox = new javax.swing.JComboBox();
        cancelOperation = new javax.swing.JButton();

        jLabel1.setText("Register Device Panel");

        jLabel2.setText("Device data: ");

        jLabel3.setText("Claimant data: ");

        jLabel4.setText("Name : ");

        jLabel5.setText("email : ");

        jLabel6.setText("Adress:");

        jLabel7.setText("City : ");

        jLabel8.setText("Phone number : ");

        jLabel9.setText("Country : ");

        jLabel10.setText("Legal type :");

        jClaimantLegalTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel11.setText("Device IMEI : ");

        jLabel12.setText("Device type :");

        jDeviceTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel13.setText("Device fault :");

        registerButton.setText("Register Claimant");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        jLabel14.setText("Device model :");

        jLabel15.setText("Device vendor: ");

        jRegisterDeviceButton.setText("Register Device");
        jRegisterDeviceButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRegisterDeviceButtonMouseClicked(evt);
            }
        });

        jDeviceVendorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeviceVendorComboBoxActionPerformed(evt);
            }
        });

        cancelOperation.setText("Cancel operation");
        cancelOperation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelOperationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jClaimantAdress, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                        .addComponent(jClaimantEmail)
                        .addComponent(jClaimantCity)
                        .addComponent(jClaimantCountry)
                        .addComponent(jClaimantPhone))
                    .addComponent(jClaimantName, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(registerButton)
                        .addComponent(jClaimantLegalTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(372, 372, 372)
                            .addComponent(cancelOperation)
                            .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(120, 120, 120)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12)
                                .addComponent(jLabel13)
                                .addComponent(jLabel14)
                                .addComponent(jLabel15))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2)
                                    .addComponent(jDeviceTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDeviceFault, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                                    .addComponent(jDeviceIMEI))
                                .addComponent(jDeviceVendorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jDeviceModelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(70, 70, 70)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(412, 412, 412))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jRegisterDeviceButton)
                        .addGap(221, 221, 221))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(123, 123, 123)
                    .addComponent(jLabel3)
                    .addContainerGap(904, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cancelOperation)))
                .addGap(75, 75, 75)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jClaimantName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jDeviceIMEI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jClaimantEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jDeviceTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jClaimantAdress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(jDeviceVendorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jClaimantCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14)
                        .addComponent(jDeviceModelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jClaimantCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13)
                        .addComponent(jDeviceFault, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jClaimantPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jClaimantLegalTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(106, 106, 106)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(registerButton)
                    .addComponent(jRegisterDeviceButton))
                .addContainerGap(194, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(118, 118, 118)
                    .addComponent(jLabel3)
                    .addContainerGap(518, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jRegisterDeviceButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRegisterDeviceButtonMouseClicked
        if (claimantRegistered.equals(1)) {

            ArrayList<String> registeredDeviceData = new ArrayList();
            registeredDeviceData.add(jDeviceIMEI.getText());
            registeredDeviceData.add(jDeviceFault.getText());

            if (!registeredDeviceData.contains("")) {
                MdsDevice device = new MdsDevice();

                if (jDeviceIMEI.getText().matches(".*\\d.*")) {
                    device.setImei(jDeviceIMEI.getText());
                } else {
                    JOptionPane.showMessageDialog(this, "IMEI number contains only digits", "Notification !!!!", JOptionPane.WARNING_MESSAGE);
                }
                device.setType((String) jDeviceTypeComboBox.getSelectedItem());
                device.setMdsDeviceModel(null);
                Session session = DataHelpers.sessionFactory.openSession();
                session.beginTransaction();
                MdsDeviceModel deviceModel = (MdsDeviceModel) session.get(MdsDeviceModel.class, ((ComboBoxItem) jDeviceModelComboBox.getSelectedItem()).getId());
                device.setMdsDeviceModel(deviceModel);

                session.save(device);
                session.getTransaction().commit();
                session.refresh(device);

                gui.getjTabbedPane1().removeTabAt(gui.getjTabbedPane1().getSelectedIndex());
                gui.getjTabbedPane1().setSelectedIndex(0);
                gui.remove(gui.registerDevicePanel);
                gui.registerDevicePanel = null;

                MdsServiceOrder order = new MdsServiceOrder();

                order.setFaultDescription(jDeviceFault.getText());

                if (foundPerson != null) {
                    newClaimant = foundPerson;
                }
                order.setMdsDevice(device);
                order.setMdsServiceClaimant(newClaimant);
                order.setRegistrationDate(new Timestamp(new java.util.Date().getTime()));
                session.beginTransaction();
                session.save(order);
                session.getTransaction().commit();
                session.close();

                gui.updateOrderCount();
                gui.refreshListingPanel();
                gui.updateOrderCount();

            } else {
                JOptionPane.showMessageDialog(this, "All arrays must be filled", "Notification !!!!", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "The claimant must be filled first !", "Notification !!!!", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jRegisterDeviceButtonMouseClicked

    private void jDeviceVendorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeviceVendorComboBoxActionPerformed
        changeModelBox();
    }//GEN-LAST:event_jDeviceVendorComboBoxActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        ArrayList<String> registeredClaimantData = new ArrayList<>();
        registeredClaimantData.add(jClaimantAdress.getText());
        registeredClaimantData.add(jClaimantCity.getText());
        registeredClaimantData.add(jClaimantCountry.getText());
        registeredClaimantData.add(jClaimantName.getText());
        registeredClaimantData.add(jClaimantEmail.getText());
        registeredClaimantData.add(jClaimantPhone.getText());

        if (!registeredClaimantData.contains("")) {
            MdsServiceClaimant claimant = new MdsServiceClaimant();
            claimant.setAdress(jClaimantAdress.getText());
            claimant.setCity(jClaimantCity.getText());
            claimant.setCountry(jClaimantCountry.getText());
            claimant.setName(jClaimantName.getText());
            claimant.setLegalType((String) jClaimantLegalTypeComboBox.getSelectedItem());

            if (jClaimantEmail.getText().matches(".*@.*")) {
                claimant.setEmail(jClaimantEmail.getText());
            } else {
                JOptionPane.showMessageDialog(this, "Email must contain @", "Notification !!!!", JOptionPane.WARNING_MESSAGE);
            }
            if (jClaimantPhone.getText().matches(".*\\d.*")) {
                claimant.setPhoneNumber(jClaimantPhone.getText());
            } else {
                JOptionPane.showMessageDialog(this, "Phone number contains only digits", "Notification !!!!", JOptionPane.WARNING_MESSAGE);
            }
            Session session = DataHelpers.sessionFactory.openSession();
            session.beginTransaction();
            Criteria cr = session.createCriteria(MdsServiceClaimant.class);
            cr.add(Restrictions.eq("email", jClaimantEmail.getText()));
            cr.add(Restrictions.eq("phoneNumber", jClaimantPhone.getText()));
            List<MdsServiceClaimant> claimantList = cr.list();

            if (!claimantList.isEmpty()) {
                System.out.println("nasiel som cloveka");
                foundPerson = claimantList.get(0);
            } else {
                session.save(claimant);
                session.getTransaction().commit();
                newClaimant = claimant;
                session.close();
            }

            registerButton.setEnabled(false);
            claimantRegistered = 1;
            jRegisterDeviceButton.setEnabled(true);
            jDeviceFault.setEnabled(true);
            jDeviceIMEI.setEnabled(true);
            jDeviceModelComboBox.setEnabled(true);
            jDeviceTypeComboBox.setEnabled(true);
            jDeviceVendorComboBox.setEnabled(true);

        } else {
            JOptionPane.showMessageDialog(this, "All arrays must be filled", "Notification !!!!", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_registerButtonActionPerformed

    private void cancelOperationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelOperationActionPerformed
        if (claimantRegistered.equals(1)) {
            Session session = DataHelpers.sessionFactory.openSession();
            session.beginTransaction();
            session.delete(newClaimant);
            session.getTransaction().commit();
            session.close();
        }
        gui.getjTabbedPane1().remove(gui.getjTabbedPane1().getSelectedIndex());
        gui.getjTabbedPane1().setSelectedIndex(0);
        gui.remove(gui.registerDevicePanel);
        gui.registerDevicePanel = null;
    }//GEN-LAST:event_cancelOperationActionPerformed
    public void setComboBoxes() {
        jClaimantLegalTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"person", "freelancer", "company"}));
        jDeviceTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"phone", "tablet", "camera"}));
        deviceVendorMap = new HashMap();
        deviceModelMap = new HashMap();

        //ResultSet rs = DataHelpers.selectFrom("SELECT * FROM `mds_device_model`");
        Session session = DataHelpers.sessionFactory.openSession();
        session.beginTransaction();

        List<MdsDeviceModel> deviceModelList = session.createCriteria(MdsDeviceModel.class).list();

        for (MdsDeviceModel temp : deviceModelList) {
            deviceModelMap.put(temp.getIdDeviceModel(), new DeviceModel(temp));
        }

        List<MdsDeviceVendor> deviceVendorList = session.createCriteria(MdsDeviceVendor.class).list();

        for (MdsDeviceVendor temp : deviceVendorList) {

            jDeviceVendorComboBox.addItem(new ComboBoxItem(temp.getVendor(), temp.getIdDeviceVendor()));
        }

        session.getTransaction().commit();
        session.close();

        changeModelBox();
    }

    public void changeModelBox() {

        Integer index = ((ComboBoxItem) jDeviceVendorComboBox.getSelectedItem()).getId();
        System.out.println(index);

        Session session = DataHelpers.sessionFactory.openSession();
        session.beginTransaction();
        MdsDeviceVendor vendor = (MdsDeviceVendor) session.get(MdsDeviceVendor.class, index);
        List<MdsDeviceModel> deviceModelList = session.createCriteria(MdsDeviceModel.class).add(Restrictions.eq("mdsDeviceVendor", vendor)).list();
        jDeviceModelComboBox.removeAllItems();
        ArrayList<ComboBoxItem> cbm = new ArrayList<>();
        for (MdsDeviceModel model : deviceModelList) {
            cbm.add(new ComboBoxItem(model.getModel(), model.getIdDeviceModel()));
        }
                ComboBoxModel<ComboBoxItem> cBmodel = new DefaultComboBoxModel<>(cbm.toArray(new ComboBoxItem[cbm.size()]));
                jDeviceModelComboBox.setModel(cBmodel);
        session.getTransaction().commit();
        session.close();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelOperation;
    private javax.swing.JTextField jClaimantAdress;
    private javax.swing.JTextField jClaimantCity;
    private javax.swing.JTextField jClaimantCountry;
    private javax.swing.JTextField jClaimantEmail;
    private javax.swing.JComboBox jClaimantLegalTypeComboBox;
    private javax.swing.JTextField jClaimantName;
    private javax.swing.JTextField jClaimantPhone;
    private javax.swing.JTextField jDeviceFault;
    private javax.swing.JTextField jDeviceIMEI;
    private javax.swing.JComboBox jDeviceModelComboBox;
    private javax.swing.JComboBox jDeviceTypeComboBox;
    private javax.swing.JComboBox jDeviceVendorComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jRegisterDeviceButton;
    private javax.swing.JButton registerButton;
    // End of variables declaration//GEN-END:variables
}
